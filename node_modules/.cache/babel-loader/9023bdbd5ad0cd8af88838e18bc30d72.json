{"ast":null,"code":"var _jsxFileName = \"/home/cabraloko/trybe/vamos-brincar/trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addEmailGlobal } from '../actions';\nimport walletLogo from '../img/wallet-figure.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      const {\n        history,\n        dispatch\n      } = this.props;\n      const {\n        email\n      } = this.state;\n      dispatch(addEmailGlobal(email));\n      history.push('/carteira');\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const minLength = 6;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleClick,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: walletLogo,\n          alt: \"wallet-logo\",\n          className: \"wallet-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          name: \"email\",\n          onChange: this.handleChange,\n          placeholder: \"Insira seu email\",\n          \"data-testid\": \"email-input\",\n          autoComplete: \"off\",\n          className: \"input-login\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          name: \"password\",\n          onChange: this.handleChange,\n          \"data-testid\": \"password-input\",\n          placeholder: \"Insira sua senha\",\n          className: \"input-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \" btn login-button\" // Solução com regex encontrada em https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n          ,\n          disabled: !(email.match(/\\S+@\\S+\\.\\S+/) && password.length >= minLength),\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLogin.propTypes = {\n  history: PropTypes.func,\n  dispatch: PropTypes.func,\n  push: PropTypes.func\n}.isRequired;\nexport default connect()(Login);","map":{"version":3,"names":["React","connect","PropTypes","addEmailGlobal","walletLogo","Login","Component","state","email","password","handleChange","target","name","value","setState","handleClick","event","preventDefault","history","dispatch","props","push","render","minLength","match","length","propTypes","func","isRequired"],"sources":["/home/cabraloko/trybe/vamos-brincar/trybewallet/src/pages/Login.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addEmailGlobal } from '../actions';\nimport walletLogo from '../img/wallet-figure.png';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n    const { history, dispatch } = this.props;\n    const { email } = this.state;\n    dispatch(addEmailGlobal(email));\n    history.push('/carteira');\n  };\n\n  render() {\n    const { email, password } = this.state;\n    const minLength = 6;\n    return (\n      <div className=\"main-container\">\n        <form onSubmit={ this.handleClick } className=\"login-form\">\n          <img src={ walletLogo } alt=\"wallet-logo\" className=\"wallet-logo\" />\n          <input\n            type=\"text\"\n            value={ email }\n            name=\"email\"\n            onChange={ this.handleChange }\n            placeholder=\"Insira seu email\"\n            data-testid=\"email-input\"\n            autoComplete=\"off\"\n            className=\"input-login\"\n            required\n          />\n          <input\n            type=\"password\"\n            value={ password }\n            name=\"password\"\n            onChange={ this.handleChange }\n            data-testid=\"password-input\"\n            placeholder=\"Insira sua senha\"\n            className=\"input-login\"\n          />\n          <button\n            type=\"submit\"\n            className=\" btn login-button\"\n            // Solução com regex encontrada em https://www.horadecodar.com.br/2020/09/13/como-validar-email-com-javascript/\n            disabled={ !(email.match(/\\S+@\\S+\\.\\S+/) && password.length >= minLength) }\n          >\n            Entrar\n\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.func,\n  dispatch: PropTypes.func,\n  push: PropTypes.func,\n}.isRequired;\n\nexport default connect()(Login);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;EAAA;IAAA;IAAA,KAClCC,KADkC,GAC1B;MACNC,KAAK,EAAE,EADD;MAENC,QAAQ,EAAE;IAFJ,CAD0B;;IAAA,KAMlCC,YANkC,GAMnB,QAAiC;MAAA,IAAhC;QAAEC,MAAM,EAAE;UAAEC,IAAF;UAAQC;QAAR;MAAV,CAAgC;MAC9C,KAAKC,QAAL,CAAc;QACZ,CAACF,IAAD,GAAQC;MADI,CAAd;IAGD,CAViC;;IAAA,KAYlCE,WAZkC,GAYnBC,KAAD,IAAW;MACvBA,KAAK,CAACC,cAAN;MACA,MAAM;QAAEC,OAAF;QAAWC;MAAX,IAAwB,KAAKC,KAAnC;MACA,MAAM;QAAEZ;MAAF,IAAY,KAAKD,KAAvB;MACAY,QAAQ,CAAChB,cAAc,CAACK,KAAD,CAAf,CAAR;MACAU,OAAO,CAACG,IAAR,CAAa,WAAb;IACD,CAlBiC;EAAA;;EAoBlCC,MAAM,GAAG;IACP,MAAM;MAAEd,KAAF;MAASC;IAAT,IAAsB,KAAKF,KAAjC;IACA,MAAMgB,SAAS,GAAG,CAAlB;IACA,oBACE;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACE;QAAM,QAAQ,EAAG,KAAKR,WAAtB;QAAoC,SAAS,EAAC,YAA9C;QAAA,wBACE;UAAK,GAAG,EAAGX,UAAX;UAAwB,GAAG,EAAC,aAA5B;UAA0C,SAAS,EAAC;QAApD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAGI,KAFV;UAGE,IAAI,EAAC,OAHP;UAIE,QAAQ,EAAG,KAAKE,YAJlB;UAKE,WAAW,EAAC,kBALd;UAME,eAAY,aANd;UAOE,YAAY,EAAC,KAPf;UAQE,SAAS,EAAC,aARZ;UASE,QAAQ;QATV;UAAA;UAAA;UAAA;QAAA,QAFF,eAaE;UACE,IAAI,EAAC,UADP;UAEE,KAAK,EAAGD,QAFV;UAGE,IAAI,EAAC,UAHP;UAIE,QAAQ,EAAG,KAAKC,YAJlB;UAKE,eAAY,gBALd;UAME,WAAW,EAAC,kBANd;UAOE,SAAS,EAAC;QAPZ;UAAA;UAAA;UAAA;QAAA,QAbF,eAsBE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,mBAFZ,CAGE;UAHF;UAIE,QAAQ,EAAG,EAAEF,KAAK,CAACgB,KAAN,CAAY,cAAZ,KAA+Bf,QAAQ,CAACgB,MAAT,IAAmBF,SAApD,CAJb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAtBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAoCD;;AA3DiC;;AA8DpClB,KAAK,CAACqB,SAAN,GAAkB;EAChBR,OAAO,EAAEhB,SAAS,CAACyB,IADH;EAEhBR,QAAQ,EAAEjB,SAAS,CAACyB,IAFJ;EAGhBN,IAAI,EAAEnB,SAAS,CAACyB;AAHA,EAIhBC,UAJF;AAMA,eAAe3B,OAAO,GAAGI,KAAH,CAAtB"},"metadata":{},"sourceType":"module"}